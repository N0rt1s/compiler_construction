
public abstract class cc{
    public number[] ms=[1];
    public abstract number mm(string lk);
    public string ll(){
        ??mm("Asdsa");
        return "asa";
    } 
    
}

public class mm:cc{
    public number ms=1;
    public override number mm(string lk){
        string kk="yuy";
        return 23;
    }
    public void mmas(string lk){
        
    }
    
}

interface ll{
    char s,adsl,xc,asda;
    char my();
}

public class bb{
    bb(string po){}
    public number mf=0;
    public number[] ms=[1];
    private number lp(){
        bool kl=2==4+9;
        ms[0][5+0][89]=45;
        return 23;
    }
    private number lp(bool mn){
        bool kl=2==4+9;
        ms[0][5+0][89]=45;
        return 23;
    }
}
public class aa:bb{
    private string ml;
    public char ms='a';
    aa(char st,number mm ) { 
        mm=0;
    }
    aa() { 
        ml="1jfnajs";
    }
    public bb as(number df) { 
        number asd= (1 + 12 - 78) + (45 + 121);
        number[] ms=[1,23,4];
        bb aclass = new aa();
        if(asd==0){
            number mm=4;
            asd=67;
            
        }
        elif(asd==1){
            number pp=12;
        }
        else{
            asd=121;
        }
        aclass.mf=0;
        if(asd==9){
            number mm=1;
        }
        for(number k= 30+.32 ; -232<12;asd++){
            asd++;
        }
        forEach(number aa in ms){
            asd=asd+aa;
        }    
        return aclass;
    }
    public number lll( ) { 
        number asd= (1 + 12 - 78) / (23 + 121);
        asd=as(9).lp()+(4-9);
        for(number i= 30+32 ; 232<12;i++){
            asd++;
        }
        return asd;
     }
}

public struct as{
    private char pol='a';
    public number pok=23;
}